// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// VCF2BD_C
int VCF2BD_C(const std::string& vcfFilename, const std::string& infoFilename, const std::string& outputFilename);
RcppExport SEXP _BinaryDosage_VCF2BD_C(SEXP vcfFilenameSEXP, SEXP infoFilenameSEXP, SEXP outputFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type vcfFilename(vcfFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type infoFilename(infoFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type outputFilename(outputFilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(VCF2BD_C(vcfFilename, infoFilename, outputFilename));
    return rcpp_result_gen;
END_RCPP
}
// VCF53toBD_C
int VCF53toBD_C(const std::string& vcfFilename, const std::string& bdFilename);
RcppExport SEXP _BinaryDosage_VCF53toBD_C(SEXP vcfFilenameSEXP, SEXP bdFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type vcfFilename(vcfFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type bdFilename(bdFilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(VCF53toBD_C(vcfFilename, bdFilename));
    return rcpp_result_gen;
END_RCPP
}
// VCFBBtoBD_C
int VCFBBtoBD_C(const std::string& vcfFilename, const std::string& bdFilename);
RcppExport SEXP _BinaryDosage_VCFBBtoBD_C(SEXP vcfFilenameSEXP, SEXP bdFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type vcfFilename(vcfFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type bdFilename(bdFilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(VCFBBtoBD_C(vcfFilename, bdFilename));
    return rcpp_result_gen;
END_RCPP
}
// VCF2Impute2BD
int VCF2Impute2BD(const std::string& vcfFilename, const std::string& infoFilename, const std::string sampleFilename, const std::string& outputFilename);
RcppExport SEXP _BinaryDosage_VCF2Impute2BD(SEXP vcfFilenameSEXP, SEXP infoFilenameSEXP, SEXP sampleFilenameSEXP, SEXP outputFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type vcfFilename(vcfFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type infoFilename(infoFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string >::type sampleFilename(sampleFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type outputFilename(outputFilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(VCF2Impute2BD(vcfFilename, infoFilename, sampleFilename, outputFilename));
    return rcpp_result_gen;
END_RCPP
}
// ReadBDInfo
Rcpp::List ReadBDInfo(const std::string& binaryDosageFilename);
RcppExport SEXP _BinaryDosage_ReadBDInfo(SEXP binaryDosageFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type binaryDosageFilename(binaryDosageFilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(ReadBDInfo(binaryDosageFilename));
    return rcpp_result_gen;
END_RCPP
}
// ReadBDSNPs
int ReadBDSNPs(std::string& filename, unsigned int numSubjects, unsigned int numSNPs, unsigned int dosageStart, Rcpp::IntegerVector& dataSize, Rcpp::IntegerVector& snps, Rcpp::NumericVector& dosageptr, Rcpp::NumericVector& p0ptr, Rcpp::NumericVector& p1ptr, Rcpp::NumericVector& p2ptr);
RcppExport SEXP _BinaryDosage_ReadBDSNPs(SEXP filenameSEXP, SEXP numSubjectsSEXP, SEXP numSNPsSEXP, SEXP dosageStartSEXP, SEXP dataSizeSEXP, SEXP snpsSEXP, SEXP dosageptrSEXP, SEXP p0ptrSEXP, SEXP p1ptrSEXP, SEXP p2ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type numSubjects(numSubjectsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type numSNPs(numSNPsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type dosageStart(dosageStartSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type dataSize(dataSizeSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type snps(snpsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type dosageptr(dosageptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type p0ptr(p0ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type p1ptr(p1ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type p2ptr(p2ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(ReadBDSNPs(filename, numSubjects, numSNPs, dosageStart, dataSize, snps, dosageptr, p0ptr, p1ptr, p2ptr));
    return rcpp_result_gen;
END_RCPP
}
// FindPointer
int FindPointer(Rcpp::NumericVector& x, Rcpp::NumericVector& y, unsigned int n);
RcppExport SEXP _BinaryDosage_FindPointer(SEXP xSEXP, SEXP ySEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(FindPointer(x, y, n));
    return rcpp_result_gen;
END_RCPP
}
// PrintPointer
int PrintPointer(Rcpp::NumericVector& y);
RcppExport SEXP _BinaryDosage_PrintPointer(SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(PrintPointer(y));
    return rcpp_result_gen;
END_RCPP
}
// GetBinaryDosageInfoC
Rcpp::List GetBinaryDosageInfoC(const std::string& bdFilename, const std::string& famFilename, const std::string& mapFilename);
RcppExport SEXP _BinaryDosage_GetBinaryDosageInfoC(SEXP bdFilenameSEXP, SEXP famFilenameSEXP, SEXP mapFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type bdFilename(bdFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type famFilename(famFilenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type mapFilename(mapFilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBinaryDosageInfoC(bdFilename, famFilename, mapFilename));
    return rcpp_result_gen;
END_RCPP
}
// OpenBDFiles
int OpenBDFiles(const Rcpp::List& bdList, const std::string& mergeFilename, const Rcpp::NumericMatrix& snpLoc);
RcppExport SEXP _BinaryDosage_OpenBDFiles(SEXP bdListSEXP, SEXP mergeFilenameSEXP, SEXP snpLocSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type bdList(bdListSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type mergeFilename(mergeFilenameSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type snpLoc(snpLocSEXP);
    rcpp_result_gen = Rcpp::wrap(OpenBDFiles(bdList, mergeFilename, snpLoc));
    return rcpp_result_gen;
END_RCPP
}
// GetDosages
Rcpp::NumericVector GetDosages(const Rcpp::List& bdInfo, int snpNumber);
RcppExport SEXP _BinaryDosage_GetDosages(SEXP bdInfoSEXP, SEXP snpNumberSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type bdInfo(bdInfoSEXP);
    Rcpp::traits::input_parameter< int >::type snpNumber(snpNumberSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDosages(bdInfo, snpNumber));
    return rcpp_result_gen;
END_RCPP
}
// TestReadBinaryDosage
int TestReadBinaryDosage();
RcppExport SEXP _BinaryDosage_TestReadBinaryDosage() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestReadBinaryDosage());
    return rcpp_result_gen;
END_RCPP
}
// TestWriteBinaryDosage
int TestWriteBinaryDosage();
RcppExport SEXP _BinaryDosage_TestWriteBinaryDosage() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TestWriteBinaryDosage());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BinaryDosage_VCF2BD_C", (DL_FUNC) &_BinaryDosage_VCF2BD_C, 3},
    {"_BinaryDosage_VCF53toBD_C", (DL_FUNC) &_BinaryDosage_VCF53toBD_C, 2},
    {"_BinaryDosage_VCFBBtoBD_C", (DL_FUNC) &_BinaryDosage_VCFBBtoBD_C, 2},
    {"_BinaryDosage_VCF2Impute2BD", (DL_FUNC) &_BinaryDosage_VCF2Impute2BD, 4},
    {"_BinaryDosage_ReadBDInfo", (DL_FUNC) &_BinaryDosage_ReadBDInfo, 1},
    {"_BinaryDosage_ReadBDSNPs", (DL_FUNC) &_BinaryDosage_ReadBDSNPs, 10},
    {"_BinaryDosage_FindPointer", (DL_FUNC) &_BinaryDosage_FindPointer, 3},
    {"_BinaryDosage_PrintPointer", (DL_FUNC) &_BinaryDosage_PrintPointer, 1},
    {"_BinaryDosage_GetBinaryDosageInfoC", (DL_FUNC) &_BinaryDosage_GetBinaryDosageInfoC, 3},
    {"_BinaryDosage_OpenBDFiles", (DL_FUNC) &_BinaryDosage_OpenBDFiles, 3},
    {"_BinaryDosage_GetDosages", (DL_FUNC) &_BinaryDosage_GetDosages, 2},
    {"_BinaryDosage_TestReadBinaryDosage", (DL_FUNC) &_BinaryDosage_TestReadBinaryDosage, 0},
    {"_BinaryDosage_TestWriteBinaryDosage", (DL_FUNC) &_BinaryDosage_TestWriteBinaryDosage, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_BinaryDosage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
